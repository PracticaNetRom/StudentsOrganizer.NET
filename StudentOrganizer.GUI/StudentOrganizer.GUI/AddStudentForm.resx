<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureEdit1.EditValue" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>